<?
if (!class_exists("board")) {

  /* --- board --
  board_id int auto_increment primary key,
  title varchar(128),
	content text,
	file_id int unsigned not null default '0',
  publish char(1) binary not null default '1' comment '0:none, 1:publish, 2:notice popup',
  add_date timestamp default CURRENT_TIMESTAMP,
	*/

	/* --- file --
  file_id int auto_increment primary key,
  name varchar(128),
	filepath varchar(128),
	filesize int not null default '0',
  add_date timestamp default CURRENT_TIMESTAMP
  */


  class board {
    var $conn=null;
    var $errors=null;
    var $datetime=null;
		var $table=null;
		var $debug=null;

    function __construct($table,$conn=null) {
      $this->datetime=time();
      if (is_resource($conn)) $this->conn=$conn;
			$tables=array(
				"notice"=>"board_notice",
				"faq"=>"board_faq"
			);
			if (in_array($table,array_keys($tables))) $this->table=$tables[$table];
    }

    function error($str=null,$die=false) {
      if ($str) $this->errors[]=$str;
      if ($die) die($str);
    }

    function get_info($board_id,$options=null) {
      $info=null;
      if (is_numeric($board_id)) {
        $board_id=intval($board_id);
				$tables=array("board"=>$this->table." e");
        $conditions=array("id"=>"e.board_id='".$board_id."'");
        $avail_cols=array(
          "board_id"=>"e.board_id board_id",
					"title"=>"e.title title",
					"publish"=>"e.publish publish",
					"content"=>"e.content content",
          "add_date"=>"unix_timestamp(e.add_date) add_date"
        );

        $default_cols=array("title","filename","conent","publish","add_date");
        $return_cols=array();
        if (!$options["return_cols"]) $options["return_cols"]=$default_cols;
        foreach ($options["return_cols"] as $col_name) if (in_array($col_name, array_keys($avail_cols))) $return_cols[$col_name]=$avail_cols[$col_name];
        $query="select e.board_id board_id,".join(",", $return_cols)." from ".join(",", $tables).(count($conditions)?" where ".join(" and ", $conditions):"");
        if ($options["debug"]) var_dump($query);
        if ($result=mysql_query($query, $this->conn)) { 
          if ($row=mysql_fetch_assoc($result)) {
            $info=$row;
          }
        } else if ($error=mysql_error()) $this->error($error);
      } else $this->error("[".$board_id."]정보를 가져 올 수 없습니다");
      return $info;    
    }

    function get_list($options=null) {
      $list=null;
      $limit="";
      if (is_numeric($options["limit_rows"])) $limit=" limit ".$options["limit_rows"];
      if (is_numeric($options["skip_rows"])) $limit=" limit ".$options["skip_rows"].",".$options["limit_rows"];

			$tables=array("board"=>$this->table." e");
      $conditions=array();
      //$order_by=" order by add_date desc";
      $order_by=" order by board_id asc";
      $avail_order=array(
        "add_date"=>"e.add_date",
      );
      if (preg_match("/^(\w+)([+-]?)$/", $options["order_by"], $matches)) {
        if (in_array($matches[1], array_keys($avail_order))) {
          $order_by=" order by ".$avail_order[$matches[1]];
          if ($matches[2]=="+") $order_by.=" desc";
        }
      }
      //if ($search=$this->get_search_condition($options)) $conditions[]=$search;

      $avail_cols=array(
        "board_id"=>"e.board_id board_id",
        "title"=>"e.title title",
        "filename"=>"e.filename filename",
        "publish"=>"e.publish publish",
        "content"=>"e.content content",
        "add_date"=>"unix_timestamp(e.add_date) add_date"
      );
      $default_cols=array("board_id", "title", "content", "publish", "filename", "add_date");
      $return_cols=array();
      if (!$options["return_cols"]) $options["return_cols"]=$default_cols;
      foreach ($options["return_cols"] as $col_name) if (in_array($col_name, array_keys($avail_cols))) $return_cols[$col_name]=$avail_cols[$col_name];

      $query="select e.board_id board_id,".join(",", $return_cols)." from ".join(",", $tables)
        .(count($conditions)?" where ".join(" and ",$conditions):"").$order_by.$limit;
      if ($options["debug"]) var_dump($query);

      $columns=is_numeric($options["columns"])?$options["columns"]:0;

      if ($result=mysql_query($query, $this->conn)) {
        $list=array();
        $i=$n=0;
        while ($row=mysql_fetch_assoc($result)) {
          $board_id=$row["board_id"];
          unset($row["board_id"]);
          if ($columns >0) {
            $i++;
            $list[$n][$board_id]=$row;
            if ($i==$columns) { $n++; $i=0; }
          } else $list[$board_id]=$row;
        }
      }
      if ($error=mysql_error()) $this->errors[]=$error;
      return $list;
    }

    function add($post,$file) {
      $added=false;
      $errors=null;
      if (!$post["title"]) $errors[]="제목을 입력하여 주십시오";
			if (!$post["content"]) $errors[]="내용을 입력하여 주십시오";
			if (count($errors)) $this->errors=$errors;
			else {
				$query="insert into ".$this->table." set ".join(",",$values);
				$this->debug=$query;
				/*
				mysql_query($query,$this->conn);
				if ($board_id=mysql_insert_id()) $added=true;
				else if ($error=mysql_error()) $this->error($error);
				 */
			}
      return $added;
    }

    function __destruct() {
    }
  }
}
?>
